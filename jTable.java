import java.awt.BorderLayout;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class jTable extends javax.swing.JFrame {

	/*
	 * To change this license header, choose License Headers in Project
	 * Properties. To change this template file, choose Tools | Templates and
	 * open the template in the editor.
	 */

	/**
	 *
	 * @author nehulyadav
	 */
	// page 2 - > array list populates jtable from the CSV file
	String courseName;
	ArrayList<Course> courseList = new ArrayList<Course>();
	final ArrayList<String> test = new ArrayList<String>();

	/**
	 * Creates new form jTable
	 */
	public jTable() {

		initComponents();
		addRowToJTable();
		try {
			courseList = ImportCSV.csvFileIN();

		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public void jTable(String courseName) {

		this.courseName = courseName;

	}

	/**
	 * This method `is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		r = new java.awt.Checkbox();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		checkbox1 = new java.awt.Checkbox();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null }, { null }, { null }, { null }, { null } }, new String[] { "Course Name" }));
		jScrollPane2.setViewportView(jTable1);
		jTable1.getAccessibleContext().setAccessibleName("jTable1");
		jTable1.getAccessibleContext().setAccessibleDescription("");

		checkbox1.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyPressed(java.awt.event.KeyEvent evt) {
				checkbox1KeyPressed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(79, Short.MAX_VALUE)
						.addComponent(checkbox1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jScrollPane2,
								javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275,
										javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addComponent(checkbox1,
								javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(19, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void checkbox1KeyPressed(java.awt.event.KeyEvent evt) {

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(jTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(jTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(jTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(jTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new jTable().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private java.awt.Checkbox checkbox1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTable1;
	private java.awt.Checkbox r;
	// End of variables declaration

	public void addRowToJTable() {

		 JTable table = new JTable();
		 DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		 String[] rowData = new String[courseList.size()];

		for (int i = 0; i < courseList.size(); i++) {
			rowData[i] = courseList.get(i).getTitle();
			model.addRow(rowData);
		}
		jTable1.setModel(model);
		jTable window = new jTable();
		JPanel panel = new JPanel();
		panel.setLayout(new BorderLayout());
		JScrollPane pane = new JScrollPane(table);
		panel.add(pane, BorderLayout.CENTER);
		window.setContentPane(panel);

	}
}
