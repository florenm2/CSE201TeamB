import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;

/**
 * 
 * @author miamistudent
 */
public class chooseClasses extends javax.swing.JFrame {

	@SuppressWarnings("unchecked")
	public ArrayList<String> classesChosen = new ArrayList<String>();
	public ArrayList<Course> courseList = new ArrayList<Course>();
	static ArrayList<String> listChecked = new ArrayList<String>();
	public int stage;
	
	/**
	 * Creates new form prereqs
	 */
	public chooseClasses() {
		initComponents();
		courseList = getCourseList();
		stage = getStage();
		classesChosen = getclassesChosen();
	}

	public int getStage(){
		return stage;
	}
	
	public ArrayList<String> getclassesChosen() {
		return classesChosen;
	}
	
	public ArrayList<Course> getCourseList() {
		return courseList;
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "unchecked", "serial", "deprecation" })
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		
		javax.swing.JTextArea jTextArea1 = new javax.swing.JTextArea();
		jTable2 = new javax.swing.JTable();
		JToggleButton nextButton = new javax.swing.JToggleButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTextArea1.setEditable(false);
		jTextArea1.setColumns(20);
		jTextArea1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
		jTextArea1.setLineWrap(true);
		jTextArea1.setRows(5);
		jTextArea1
				.setText("Please select which of the following courses you have completed:");
		jTextArea1.setToolTipText("");
		jTextArea1.setWrapStyleWord(true);
		
		
		jTable2.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { new Boolean(false), "CSE 148: Business Computing" },
						{ new Boolean(false), "CSE 151: Computers, Comp Sci & Society" },
						{ new Boolean(false), "CSE 163: Intro-Computer Concepts & Prog" },
						{ new Boolean(false), "CSE 174: Fundmntls-Progrming&Prob Solvg" },
						{ new Boolean(false), "CSE 174H: Fundmntls-Progrming&Prob Solvg" },
						{ new Boolean(false), "CSE 201: Intro to Software Engineering" },
						{ new Boolean(false), "CSE 212: Software Engineering for HCI" },
						{ new Boolean(false), "CSE 220: Professional Practice" },
						{ new Boolean(false), "CSE 243: Problem Analysis and Computers" },
						{ new Boolean(false), "CSE 251: Intro to Game Programming" },
						{ new Boolean(false), "CSE 262: Tech,Ethics & Global Society" },
						{ new Boolean(false), "CSE 271: Object-Oriented Programming" },
						{ new Boolean(false), "CSE 274: Data Abstractions & Structures" },
						{ new Boolean(false), "CSE 278: Computer Architecture" },
						{ new Boolean(false), "CSE 283: Data Communications & Network" },
						{ new Boolean(false), "CSE 287: Foundations of Graphics" },
						{ new Boolean(false), "CSE 320: Professional Practice" },
						{ new Boolean(false), "CSE 322: Software Requirements" },
						{ new Boolean(false), "CSE 372: Stochastic Modeling" },
						{ new Boolean(false), "CSE 381: Operating Systems" },
						{ new Boolean(false), "CSE 383: Client/Server Programming" },
						{ new Boolean(false), "CSE 385: Database Systems" },
						{ new Boolean(false), "CSE 386: Intro To Computer Graphics" },
						{ new Boolean(false), "CSE 441: Technical Computing Tools" },
						{ new Boolean(false), "CSE 448: Senior Design Project" },
						{ new Boolean(false), "CSE 449: Senior Design Project" },
						{ new Boolean(false), "CSE 464: Algorithms" },
						{ new Boolean(false), "CSE 466: Bioinformatics Computing Skill" },
						{ new Boolean(false), "CSE 473: Automata Forml Lang&Computblty" },
						{ new Boolean(false), "CSE 486: Intro Artificial Intelligence" },
						{ new Boolean(false), "CSE 541: Technical Computing Tools" },
						{ new Boolean(false), "CSE 564: Algorithms" },
						{ new Boolean(false), "CSE 566: Bioinformatics Computing Skill" },
						{ new Boolean(false), "CSE 573: Automata Forml Lang&Computblty" },
						{ new Boolean(false), "CSE 586: Intro Artificial Intelligence" },
						{ new Boolean(false), "CSE 609: Scientific Programming" },
						{ new Boolean(false), "CSE 610J: Grad Research in Comp. Science" },
						{ new Boolean(false), "CSE 615: Mathematical Modeling" },
						{ new Boolean(false), "CSE 620: Special Topics" },
						{ new Boolean(false), "CSE 620A: Knowledge Representation" },
						{ new Boolean(false), "CSE 700: Master's Research" } }, new String[] { "",
						"Course" }) {
			Class[] types = new Class[] { java.lang.Boolean.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { true, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}

		});

		try {
			courseList = Controller.displayCoursesOnce(ImportCSV.csvFileIN());
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		nextButton.setLabel("Next");
		nextButton.addActionListener(new java.awt.event.ActionListener() {			
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				for (int i = 1; i < 11; i++)
					if ((Boolean) jTable2.getValueAt(i, 0)) {
						listChecked.add((String) jTable2.getValueAt(i, 1));
					}
				jToggleButton1ActionPerformed(evt, listChecked);
			}
			
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(71, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jTextArea1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														396,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jTable2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		342,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		nextButton)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(20, 20, 20)
								.addComponent(jTextArea1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										108,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														jTable2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(nextButton))
								.addContainerGap()));

		pack();
	}// </editor-fold>

	private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt, ArrayList<String> CC) {
		this.classesChosen = CC;
	}

	public static void main(String args[]) {


		chooseClasses p = new chooseClasses();

	//	ArrayList<String> completed = p.classesChosen;

	}

	// Variables declaration - do not modify
	public static javax.swing.JButton nextButton;
	private static javax.swing.JTable jTable2;
	// End of variables declaration
}
